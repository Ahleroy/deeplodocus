# _____________________
#
# ---- DEEPLODOCUS ----
# _____________________

library: tensorflow #tensorflow, theano, pytorch, etc...

# _______________
#
# ---- PATHS ----
# _______________
#
# Specify a name for the model
# Specify a working
# Specify a path from which to load a model in load: path
# Set load: from_working_dir to true to import a model from the working directory
# If load: from_working_dir only the file name (not path) needs to be specified in load: path

name: depthnet
working_dir: models
load:
  path:
  from_working_dir: true

# _______________
#
# ---- BUILD ----
# _______________
#
# Specify the method by which the model is defined: yaml_path, module or architecture
#   > module
#     If the model is defined by a python module, enter the name of the module (e.g. VGG16) in build: module: name
#     If the module requires any args, enter them a list in build: module: args
#     If the module requires any kwargs, enter them as a dict under build: module: kwargs
#   > yaml_path
#       If your model is defined in a yaml file enter the file path in build: yaml_path:
#       The model must be defined as a list of dictionaries
#       An example can be found in TODO
#   > architecture
#       Alternatively, you can define you model architecture as a list of dictionaries in build: architecture
#       An example can be found in TODO

build:
  method: module
  yaml_path: /home/...
  module:
    name: DepthNet
    args:
    kwargs:
      input_shape: [512, 512, 1]
      use_deconv : True
      resize_method : "nearest_neighbor"
      mode : "train"
  architecture:

# ___________________
#
# ---- OPTIMIZER ----
# ___________________
#
# Specify the optimizer algorithm in optimizer: algorithm
# The algorithm will be imported from tensorflow.python.keras.optimizers
# Specify any kwargs for the optimizer in optimizer: kwargs

optimizer:
  algorithm: Adam
  kwargs:
    amsgrad: false
    beta_1: 0.9
    beta_2: 0.999
    decay: 0.0
    epsilon: 1.0e-09
    lr: 1.0e-03


# _________________
#
# ---- COMPILE ----
# _________________
#
# Specify any additional kwargs for compiling the model

compile:
  loss: [DepthNet.loss]                                        # Only one loss per output. If loss == module.custom_loss, the function "custom_loss(y_true, y_pred)" from the module will be loaded into the model
  metrics: [mae, mse]
  loss_weights: null
  sample_weight_mode: null
  weighted_metrics: null
  target_tensors: null


# _______________________
#
# ---- FIT GENERATOR ----
# _______________________
#
# Specify any additional kwargs for compiling the model

fit_gen:
  epochs: 10
  initial_epoch: auto
  max_queue_size: 8
  shuffle: false
  use_multiprocessing: True
  verbose: 1
  workers: 4
  class_weight: inverse_frequency

# _________________________
#
# ---- DATA GENERATORS ----
# _________________________

data_gen:
  common:
    method: from_file
    x_shapes:
      - [512, 512, 1]
      - [512, 512, 1]
    y_shapes:
      - [1]
    batch_size: 4
    scale: 0.003921568627451
    bias: 0
    means :
      - [127.5]
      - [127.5]
    delimiter: ","
    delimiter_sequence: ";"
    data_augmenter_file : config/data_augmentation/data_augmentation.yml
    x_types:
      - image
      - image
    y_types:
      - regression
  train:
    horizontal_flip: False
    vertical_flip: False
    channel_shift: 0
    keep_aspect: True
    shuffle: all
    seed: 0
    use_augmented: False
    save_augmented_data__to: /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/trajectory/augmented
    directory: None
    x_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_left_LR_consistency.csv
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_right_LR_consistency.csv
    y_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_y_LR_consistency.csv
  val:
    horizontal_flip: False
    vertical_flip: False
    channel_shift: 0
    keep_aspect: True
    shuffle: never
    seed: 0
    use_augmented: False
    save_augmented_data__to: null
    directory: None
    x_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_left_LR_consistency.csv
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_right_LR_consistency.csv
    y_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_y_LR_consistency.csv
  test:
    horizontal_flip: False
    vertical_flip: False
    channel_shift: 0
    keep_aspect: True
    shuffle: never
    seed: 0
    use_augmented: False
    save_augmented_data__to: null
    directory: None
    x_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_left_LR_consistency.csv
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_x_right_LR_consistency.csv
    y_files:
      - /media/alix/D6D0EBFED0EBE2AB/Users/Alix/Documents/Hubic/PhD/data/PANGU/generated_images/left_right_consistency_depth/train_close_y_LR_consistency.csv

# _________________
#
# ---- HISTORY ----
# _________________

history:
  metrics: [loss, val_loss, mse, mae]

# ___________________
#
# ---- CALLBACKS ----
# ___________________
#
# Specify whether or not to enable a tensorboard callback in callbacks: tensorboard: enabled
# Specify whether or not to enable a checkpoint callback in callbacks: checkpoint: enabled
# Specify kwargs for the checkpoint callbacks in callbacks: checkpoint: kwargs

callbacks:
  tensor_board:
    enabled: false
  checkpoint:
    enabled: true
    kwargs:
     mode: auto
     monitor: val_loss
     save_best_only: true
     save_weights_only: false
     period: 1
     target_value: 0
     verbose: 1

# __________________
#
# ---- EVALUATE ----
# __________________
#
# Specify the data generator to use in evaluation evaluate: data_gen
# Set save_incorrect to true to save instances of incorrect images

evaluate:
  data_set: val
  save_incorrect: true


# _______________________
#
# ---- Patch Predict ----
# _______________________

patch_predict:
  path: samples/cifar10/train/0/1.png
  patch_size: 20
  bias: 0
  scale: 0.003921568627451
  keep_aspect: true
  show: true
  ground_truth: 0


# __________________
#
# ---- ON START ----
# __________________

on_start:
  enabled: false
  commands:
    - load_model:
